/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: vjory-ca <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2018/09/06 16:38:38 by vjory-ca          #+#    #+#             */
/*   Updated: 2018/09/06 18:57:50 by vjory-ca         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <unistd.h>
#include <fcntl.h>
#include <errno.h>

#define BYTE 28000

void	ft_putstr(char *str)
{
	int i;

	i = 0;
	while (str[i])
	{
		write(1, &str[i], 1);
		i++;
	}
}

int		err()
{
	char st;

	while (read(0, &st, 1))
	{
		write(1, &st, 1);
	}
	return (1);
}

int	ft_strlen(char *str)
{
	int i;

	i = 0;
	while (str[i])
	{
		i++;
		str++;
	}
	return (i);
}
 
void	errn(char *er)
{
	write(2, "cat : ", 6);
	write(2, er, ft_strlen(er));
	if (errno == EACCES)
		write(2, ": Permission denied\n", 20);
	else if (errno == ENOENT)
		write(2, ": No such file or directory\n", 28);
	else if (errno == EISDIR)
		write(2, ": Is a directory\n", 17);
	else if (errno == EBADF)
		write(2, ": Bad file number\n", 18);
	else if (errno == EAGAIN)
		write(2, ": Resource temporarily unavailable\n", 35);
	else if (errno == EINTR)
		write(2, ": Interrupted function call\n", 28);
	else if (errno == EIO)
		write(2, ": Input/output error\n", 21);
	else if (errno == EINVAL)
		write(2, ": Invalid argument\n", 19);
	else
		write(2, ": Unknown error\n", 16);
}

int		cat(int st)
{
	char fi[BYTE + 1];
	int z;

	if (st == -1)
		return (st);
	z = read(st, fi, BYTE);
	while (z > 0)
	{
		ft_putstr(fi);
		z = read(st, fi, BYTE);
	}
	close(st);
	return (0);
}

int main(int argc, char **argv)
{
	int i;

	if (argc < 2)
		return (err());
	i = 1;
	while (i < argc)
	{
		if (cat(open(argv[i], O_RDONLY)) == -1)
			errn(argv[i]);
		i++;
	}
}